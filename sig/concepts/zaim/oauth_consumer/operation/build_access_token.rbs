module Zaim::OauthConsumer
  module Operation
    class MyHandler
      # def self.call: (untyped exception, (untyped | [untyped]) ctx, *untyped) -> boolish
    end

    class BuildAccessToken < Trailblazer::Operation
      def extract_request_token: (untyped ctx, oauth_consumer: untyped, session: untyped, **untyped) -> untyped

      def get_access_token: (untyped ctx, request_token: untyped, params: untyped, **untyped ) -> untyped

      def store_access_token_to_session: (untyped _ctx, access_token: untyped , session: untyped , **untyped) -> untyped
    end
  end
end
