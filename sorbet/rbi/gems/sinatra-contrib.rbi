# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/sinatra-contrib/all/sinatra-contrib.rbi
#
# sinatra-contrib-2.1.0

module Sinatra
end
module Sinatra::EngineTracking
  def builder?; end
  def coffee?; end
  def creole?; end
  def current_engine; end
  def erb?; end
  def erubi?; end
  def erubis?; end
  def haml?; end
  def initialize(*arg0); end
  def less?; end
  def liquid?; end
  def markaby?; end
  def markdown?; end
  def nokogiri?; end
  def radius?; end
  def rdoc?; end
  def render(engine, *arg1); end
  def ruby?; end
  def sass?; end
  def scss?; end
  def slim?; end
  def textile?; end
  def with_engine(engine); end
end
module Sinatra::Capture
  def capture(*args, &block); end
  def capture_later(&block); end
  include Sinatra::EngineTracking
end
module Sinatra::ContentFor
  def clear_content_for(key); end
  def content_blocks; end
  def content_for(key, value = nil, options = nil, &block); end
  def content_for?(key); end
  def yield_content(key, *args, &block); end
  include Sinatra::Capture
end
module Sinatra::MultiRoute
  def delete(*args, &block); end
  def get(*args, &block); end
  def head(*args, &block); end
  def options(*args, &block); end
  def patch(*args, &block); end
  def post(*args, &block); end
  def put(*args, &block); end
  def route(*args, &block); end
  def route_args(args); end
end
module Sinatra::Delegator
  def route(*args, &block); end
end
class Sinatra::Application < Sinatra::Base
  extend Sinatra::MultiRoute
end
module Sinatra::Contrib
end
