# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/async_sinatra/all/async_sinatra.rbi
#
# async_sinatra-1.3.0

module Sinatra
end
module Sinatra::Async
  def adelete(path, opts = nil, &bk); end
  def aget(path, opts = nil, &block); end
  def ahead(path, opts = nil, &bk); end
  def alink(path, opts = nil, &bk); end
  def aoptions(path, opts = nil, &bk); end
  def apatch(path, opts = nil, &bk); end
  def apost(path, opts = nil, &bk); end
  def aput(path, opts = nil, &bk); end
  def aroute(verb, path, opts = nil, &block); end
  def aunlink(path, opts = nil, &bk); end
  def self.registered(app); end
end
module Sinatra::Async::Helpers
  def ahalt(*args); end
  def aparams; end
  def async_catch_execute(&b); end
  def async_handle_exception; end
  def async_response; end
  def async_runner(meth, *bargs); end
  def async_schedule(&b); end
  def body(value = nil); end
  def native_async_schedule(&b); end
  def on_close(&blk); end
end
module AsyncSinatra
end
